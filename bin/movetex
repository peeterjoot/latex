#!/usr/bin/perl

# 
# After calling this, conversion steps could include:
#
#   - run:
#
#    filtertex
#
#   - deal with local macros and commands.
#
#   - deal with local eqn:'s. (should be less to do for this since I'm modifying
#     ../t/ with the current working file).
#
#   - Edit Makefile, chapters.tex, and METADATA to put the added stuff in the
#      right places.
#
#   - convert internal citations to chapter references.
#
#      %s/cite{/ref{chap:/cg
#      %s/\cite{\\chapcite{/cg
#
# movebin now does.
#   - symlink figures :     grep includegraphics XX.tex
#

use strict ;
use warnings ;
use Getopt::Long ;
use POSIX qw/strftime/ ;

my $d ;
#$d = 'gabookI' ;
#$d = 'gabookII' ;
$d = 'ece1228' ;
#$d = 'nonga' ;
#$d = 'phy1520' ;
#$d = 'phy2403' ;
#$d = 'phy456' ;
#$d = 'phy450' ;
#$d = 'phy454' ;
#$d = 'otherbook' ;
#$d = 'ece1236' ;
my $filebase ;
my $printOnly = 0 ;
my $spellcheck = 1 ;

my $mathbase = 'math2016' ;

GetOptions(
   'file=s'   => \$filebase,
   'spellcheck!'   => \$spellcheck,
   'dir=s'    => \$d,
   'print!'   => \$printOnly,
) ;

# could map these if required:
#ece1229-antenna
#ece1236-microwaves
#ece1254-multiphysics
#phy1520-quantum
#phy2403-qft
#phy356-qmI
#phy450-relativisticEandM
#phy452-basicstatmech
#phy454-continuumechanics
#phy456-qmII
#phy485-optics
#phy487-qmsolids
$d = 'ece1228-electromagnetic-theory' if ( $d eq 'ece1228' ) ;

die unless defined $filebase ;

my $suffix = 'ltx' ;

if ( ! -e "$filebase.$suffix" )
{
   $suffix = 'tex' ;
}

die "could not find file '$filebase.ltx or '$filebase.tex'\n"
   if ( ! -e "$filebase.$suffix" ) ;

my $curDirName = `pwd` ; chomp $curDirName ;
$curDirName =~ s,.*/,, ;

my @newDirCommands = () ;
my @newDeps = () ;

#die ;
my $gpat = "-e includegraphics -e imageFigure -e pdfTexFigure 'input.*pdf_tex' 2>/dev/null" ;

# FIXME: want these as dependencies, but not in the git repo:
#$gpat .= ' -e movieFigure' ;

my @ig = split(/[\n\r\l]+/, `grep --text $gpat $filebase.$suffix | sed 's/%.*//'`) ;
foreach (@ig)
{
   next if ( $_ eq '' ) ;

   unless ( s/^\\imageFigure{// or
#        s/^\\movieFigure{// or
        s/^\\pdfTexFigure{// )
   {
      $_ =~ s/.*{// ;
   }

   s/}.*// ;

   $_ =~ s/\.pdf_tex// ;
   $_ .= '.*' ;

#print "glob: $_\n" ;
   my @gg = glob( $_ ) ;

   foreach (@gg)
   {
#print "gg: $_\n" ;
      if ( !-e "$_" )
      {
         warn "in: $curDirName: cannot find file '$_' (skipping)\n" ;
         next ;
      }

      push( @newDirCommands, "git mv ../$curDirName/$_ $_" ) ;

      push( @newDeps, $_ ) ;
   }
}

my $title = `grep --text 'chapter{' $filebase.$suffix` ;
chomp $title ;
if (! ($title =~ s/.*{(.*?)}.*/$1/) )
{
   $title = `grep --text 'generatetitle{' $filebase.$suffix` ;
   chomp $title ;
}

my $date = `grep --text 'date{' $filebase.$suffix` ;
chomp $date ;
$date =~ s/.*{(.*?)}.*/$1/ ; 

if ( $date eq '' )
{
   $date = strftime( "%B %d, %Y", localtime ) ;
}

my $meta = ",{
   SOURCE => '$filebase',
   TITLE => qq($title),
   DATE => '$date',
   REF => '$filebase',
   URL => 'http://peeterjoot.com/archives/$mathbase/$filebase.pdf',
   WHAT => qq()
}" ;

my @thisDirCommands = (
    "git commit $filebase.$suffix"
   ,"git mv $filebase.$suffix ../$d/$filebase.tex"
) ;

if ( $spellcheck )
{
   push( @newDirCommands, "aspell -c --mode=tex $filebase.tex" ) ;
}

#foreach (@newDeps)
#{
#   push( @newDirCommands, "echo 'BOOKDEPENDENCIES +=' $_ >> make.dep" ) ;
#}

push( @newDirCommands, "~/physicsplay/bin/filtertex $filebase.tex" ) ;
push( @newDirCommands, "echo '\%\\input{'$filebase'.tex}' >> chapters.tex" ) ;
#push( @newDirCommands, "echo 'BOOKDEPENDENCIES +=' $filebase.tex >> make.dep" ) ;

push( @newDirCommands, "
cat >> ../$d/METADATA << EOF
$meta
EOF
" ) ;

foreach (@thisDirCommands)
{
   dosystem( $_ ) ;
}

chdir "../$d" or die ;

foreach (@newDirCommands)
{
   dosystem( $_ ) ;
}

exit 0 ;

sub dosystem
{
   if ( $printOnly )
   {
      print "$_\n" ;
   }
   else
   {
      system "$_" ;
   }
}

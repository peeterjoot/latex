#!/usr/bin/perl

use strict ;
use warnings ;
use Getopt::Long;

my $rc = $? ;
my $built = 0 ;
my $forcebib = 0 ;
my $verbose = 1 ;
my $filename ;
my $justonce = 0 ;
my $oldscript = 0 ;

GetOptions(
   'filename=s'   => \$filename,
   'forcebib!'    => \$forcebib,
   'justonce!'    => \$justonce,
   'oldscript!'   => \$oldscript,
   'verbose!'     => \$verbose
) ;

die "usage: make_pdflatex [-forcebib] [-[no]verbose] -filename filename.tex\n" if (! defined $filename) ;

my @options = (
   # http://tex.stackexchange.com/questions/7204/errors-warnings-in-latex-output
   '-file-line-error',

   # http://docs.miktex.org/2.9/manual/pdftex.html
   #'--c-style-errors',
   # This option doesn't work in Ubuntu 15.10's texlive.  http://www.tug.org/pipermail/tex-live/2010-April/025353.html indicates that this is an alias for -file-line-error, so perhaps has been removed after
   # deprecation.

   # http://tex.stackexchange.com/questions/57253/in-a-multiple-file-latex-document-is-there-a-way-to-tag-each-page-with-the-file#comment120203_57253
   '-synctex=1',

   # for minted package:
   '-shell-escape',

   # http://tex.stackexchange.com/questions/52988/avoid-linebreaks-in-latex-console-log-output
   '--max-print-line=1000',

   # http://tex.stackexchange.com/questions/1191/reducing-the-console-output-of-latex
   #' -interaction batchmode',

   # This gets unfriendly sometimes, but is useful if tex gets confused somewhere
   # very early in the source file.
   '--halt-on-error',
) ;

unless ( $oldscript )
{
   # junk my script after reading:
   # http://tex.stackexchange.com/questions/263106/best-way-to-compile-a-latex-project
   my $pdflatex = 'latexmk -pdf' ;

   foreach (@options)
   {
      $pdflatex .= " -latexoption='$_'" ;
   }

   print "### $pdflatex $filename\n" if ( $verbose ) ;

   system( "$pdflatex $filename" ) ;
}
else
{
   my $pdflatex = 'pdflatex' ;

   foreach (@options)
   {
      $pdflatex .= " $_" ;
   }

   my $pwd = `pwd` ; chomp $pwd ;

   for ( my $i = 0 ; $i < 3 ; $i++ )
   {
      my $genbib = 0 ;
      my $genindex = 0 ;
      my $indexFile ;

      my $basename = $filename ;
      $basename =~ s/\..*// ;

      print "$i: ### $pdflatex $filename\n" if ( $verbose ) ;

      system( "$pdflatex $filename" ) ;
      $rc = $? >> 8 ;

      open my $fh, "<$basename.log" or die "could not open '$basename.log'\n" ;

      while (<$fh>)
      {
         print ;

         if (    /Rerun to get cross-references/
              or /There were multiply-defined labels/
              or /Warning: Citation/
              or /Warning: Label\(s\) may have changed./
              or /Rerun to get outlines right/
              or /Rerun to get bibliographical references right/
              or ($forcebib and !$i)
            )
         {
            $genbib = 1 ;
         }

         # only do the makeindex on the first pass.
         if ( /Writing index file (\S+)/ and !$i )
         {
            $indexFile = $1 ;
            $genindex = 1 ;
         }
      }
      close $fh ;
      $rc = $? ;

      if ( $genindex )
      {
         print "$i: ### makeindex $indexFile\n" if ( $verbose ) ;
         system( "makeindex $indexFile" ) ;
      }

      if ( $genbib )
      {
         print "$i: ### bibtex $basename\n" if ( $verbose ) ;
         system( "bibtex $basename" ) ;
      }

      last unless ( $genbib or $genindex ) ;

      exit if ($justonce) ;
   }

   exit $rc ;
}

#!/usr/bin/perl

use strict ;
use warnings ;
use Getopt::Long ;

my $book = 0 ;
my $onlyrepo = 0 ;
my $onlycommit = 0 ;
my $onlycommitdate = 0 ;
my $mytime = 0 ;
my $define = '' ;
my $newline = 1 ;
my $headerName = '' ;
my $bookmajver = 1 ;
my $booksubver = '' ;
my $revcountstart = 0 ;
my $lastCommit ;
my $commitDate ;
my $basever ;
my $filename ;

#all :: .revinfo/lastCommit.tex
#all :: .revinfo/gitCommitDateAsMyTime.tex
#all :: .revinfo/lastCommitBook.tex
#all :: .revinfo/gitCommitDate.tex
#all :: .revinfo/gitCommitString.tex
#all :: .revinfo/gitRepo.tex

###gitCommitDate.tex
###
###   Jan/6/2017
###
###gitCommitDateAsMyTime.tex
###   \newcommand{\myTime}{January 2017}
###
###gitCommitString.tex
###   75c03f16c696840cb3812560e88dca03ce7096e0
###
###gitRepo.tex
###   https://github.com/peeterjoot/physicsplay
###
###lastCommit.tex
###   Revision 0.1 https://github.com/peeterjoot/physicsplay commit 75c03f16c696840cb3812560e88dca03ce7096e0 Jan/6/2017
###
###lastCommitBook.tex
###
###   Version 0.1
###
###   Sources for this notes compilation can be found in the github repository
###
###   \href{https://github.com/peeterjoot/physicsplay}{https://github.com/peeterjoot/physicsplay}
###
###   The last commit (Jan/6/2017), associated with this pdf was
###
###   75c03f16c696840cb3812560e88dca03ce7096e0
###

GetOptions( 
   'outfile=s'  => \$filename,
   'book!'      => \$book,
   'base=s'     => \$basever,
   'mytime!'    => \$mytime,
   'commit!'    => \$onlycommit,
   'date!'      => \$onlycommitdate,
   'repo!'      => \$onlyrepo,
   'newline!'   => \$newline,
   'define=s'   => \$define,
   'header=s'   => \$headerName,
   'help'       => sub { die "usage: mkRevInfo [-book] [-commit] [-date] [-repo] [--basever] --outfile filename\n" ; },
) ;

die "Required parameter --outfile is missing" unless ( defined $filename ) ;

#my $r = 0 ;
#
#if ( defined $basever )
#{
#   $r = `git rev-list --count $basever` ; chomp $r ;
#}

if ( defined $ENV{'BOOKSUBVER'} )
{
   $booksubver = "$ENV{'BOOKSUBVER'}";
}

if ( defined $ENV{'BOOKSUBVER'} )
{
   $bookmajver = "$ENV{'BOOKMAJVER'}";
}

if ( defined $ENV{'REVCOUNTSTART'} )
{
   $revcountstart = $ENV{'REVCOUNTSTART'};
}

my $r;
if ( defined $ENV{'REVISIONNUMBER'} )
{
   $r = $ENV{'REVISIONNUMBER'};
}
else
{
   $r = `git rev-list --count HEAD` ; chomp $r;
   $r = $r - $revcountstart;
}

open my $ofh, ">$filename.$$" or die ;

open my $fh, "git log -1 |" or die ;
while (<$fh>)
{
   chomp ;

   if ( s/commit\s*// )
   {
      $lastCommit = $_ ;
   }
   elsif ( s/^Date:\s*// )
   {
      # Date:   Sun Feb 12 13:38:15 2012 -0500

      # strip timezone:
      s/\s*-\d+// ;

      # strip day of week:
      s/\S+\s+// ;

      # strip hour:min:sec
      s/\d\d:\d\d:\d\d\s+// ;

      # convert spaces to /'s
      s, ,/,g ;

      #s/\s+$// ;

      $commitDate = $_ ;
      last ;
   }
}
close $fh ;

my $url = `git config --get remote.origin.url` ; chomp $url ;
#"https://github.com/peeterjoot/physicsplay" ;
#$url = "http://goo.gl/j2GYL" ;
my $output = '' ;

if ( $mytime )
{
   my $timeString = $commitDate ;
   die unless ( $timeString =~ m,(.*)/\d+/(.*), ) ;

   my ($mon, $year) = ( $1, $2 ) ;

   my %longMonth = (
      'Jan' => 'January',
      'Feb' => 'February',
      'Mar' => 'March',
      'Apr' => 'April',
      'May' => 'May',
      'Jun' => 'June',
      'Jul' => 'July',
      'Aug' => 'August',
      'Sep' => 'September',
      'Oct' => 'October',
      'Nov' => 'November',
      'Dec' => 'December'
   ) ;

   $output = qq@\\newcommand{\\myTime}{$longMonth{$mon} $year}\n@ ;
# this is a hack.  should be elsewhere.
   $output .= qq@\\newcommand{\\myVersion}{V${bookmajver}.${booksubver}.$r\\xspace}@ ;
}
elsif ( $book )
{
   $output = qq@
Version \\myVersion

Sources for this notes compilation can be found in the github repository

\\href{$url}{$url}

The last commit ($commitDate), associated with this pdf was

$lastCommit

@ ;

   if ( -e "version_bash.tex" ) {
      $output .= `cat version_bash.tex`;
   }
}
elsif ( $onlyrepo )
{
   $output = "$url" ;
}
elsif ( $onlycommit )
{
   $output = "$lastCommit" ;
}
elsif ( $onlycommitdate )
{
   $output = "$commitDate" ;
}
else
{
   $output = "Revision 0.$r $url commit $lastCommit $commitDate" ;
}

if ( $define ne '' )
{
   if ( $headerName ne '' )
   {
      $headerName =~ s,.*/,, ;
      $headerName =~ s/\./_/g ;

      print $ofh
         "#if !defined ${headerName}_is_included\n" .
         "#define ${headerName}_is_included\n" .
         "\n" ;
   }

   print $ofh qq@#define $define "$output"\n@ ;

   if ( $headerName ne '' )
   {
      print $ofh "\n#endif\n" ;
   }
}
else
{
   print $ofh $output ;

   print $ofh "\n" if ( $newline ) ;
}

close $ofh ;

system( "cmp -s $filename $filename.$$" ) ;
if ( $? >> 8 )
{
   system( "mv $filename.$$ $filename" ) ;
}
